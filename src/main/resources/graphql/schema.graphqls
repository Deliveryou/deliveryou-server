scalar DateTime
scalar Date

type Query {
    userById(id: Int): User
    applicablePromotion(userId: Int): [Promotion]
#    allChatSessions(userId: Int): [ChatSession]
    chatSession(userId: Int, shipperId: Int): ChatSession
}

type User {
    id: Int
    firstName: String
    lastName: String
    phone: String
    role: UserRole
    password: String
    citizenId: String
    profilePictureUrl: String
    dateOfBirth: Date
}

type UserRole {
    id: Int,
    name: String
}

type Promotion {
    id: Int
    promoCode: String
    description: String
    discountPercentage: Float
    maximumDiscountAmount: Float
    applicablePrice: Float
    expireDate: DateTime
}

type ChatSession {
    user: User
    shipper: User
    channelUrl: String
    firstCreated: DateTime
}

type PackageType {
    id: Int,
    name: String
}

type Address {
    id: Int
    latitude: Float
    longitude: Float
    displayName: String
    country: String
    countryCode: String
}

type DeliveryPackage {
    id: Int
    user: User
    shipper: User
    photoUrl: String
    promotion: Promotion
    price: Float
    senderAddress: Address
    recipientAddress: Address
    recipientName: String
    recipientPhone: String
    note: String
    packageType: PackageType
    creationDate: DateTime
}